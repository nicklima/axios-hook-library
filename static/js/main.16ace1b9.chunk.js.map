{"version":3,"sources":["logo.svg","components/ResponseBoard/index.module.css","components/RadioInput/index.module.css","components/MenuSettings/index.module.css","../../src/index.tsx","components/InfoBar/index.tsx","components/RadioInput/index.tsx","components/MenuSettings/index.tsx","components/ResponseBoard/index.tsx","containers/App/index.tsx","index.tsx","containers/App/index.module.css","components/InfoBar/index.module.css"],"names":["module","exports","resetInterval","React","isSuccess","setIsSuccess","hasError","setHasError","isLoading","setIsLoading","rspData","setRspData","timeout","setTimeout","clearTimeout","fetchData","a","method","baseURL","data","headers","e","InfoBar","endpoint","reset","className","styles","appInfos","style","color","appEndpoint","RadioInput","setReset","changeMethod","changeEndpoint","inputMethods","join","inputSwitch","type","onChange","inputSlider","inputUrl","placeholder","value","target","map","item","idx","key","inputCheckOptions","checked","inputCheckMark","MenuSettings","handleMethod","handleEndpoint","handleReset","useState","settings","setSettings","aria-label","menuCog","onClick","holder","menuSettings","painel","bgSettings","ResponseBoard","appResponse","JSON","stringify","App","setMethod","setEndpoint","useAxiosHook","formData","title","userId","app","appHeader","src","logo","appLogo","alt","appBody","appButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16ace1b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appResponse\":\"ResponseBoard_appResponse__2Aj4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputUrl\":\"RadioInput_inputUrl__KsH3K\",\"inputMethods\":\"RadioInput_inputMethods__1Bggj\",\"inputMethods--slider\":\"RadioInput_inputMethods--slider__216QK\",\"inputCheckOptions\":\"RadioInput_inputCheckOptions__1eJzh\",\"inputCheckMark\":\"RadioInput_inputCheckMark__1_hX1\",\"inputSwitch\":\"RadioInput_inputSwitch__2NBC3\",\"inputSlider\":\"RadioInput_inputSlider__IR8HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuCog\":\"MenuSettings_menuCog__15rxk\",\"holder\":\"MenuSettings_holder__3GBr8\",\"open\":\"MenuSettings_open__WPVpx\",\"menuSettings\":\"MenuSettings_menuSettings__3uqKR\",\"bgSettings\":\"MenuSettings_bgSettings__3uwy6\",\"painel\":\"MenuSettings_painel__Mg1If\",\"menuSettings--on\":\"MenuSettings_menuSettings--on__Nrc1c\"};","import * as React from 'react'\r\nimport axios, { AxiosError, AxiosResponse } from 'axios'\r\n\r\n/**\r\n* Creation of react states to identify errors, success and loading. \r\n* Creation of the function that sends/get requests to endpoint.\r\n* @param {Number=} resetInterval Time in milliseconds to reset \"isSuccess\" state (optional)\r\n* @return {boolean} isLoading: The load state\r\n* @return {boolean} isSuccess: The success state\r\n* @return {boolean} hasError: The error state\r\n* @return {object} rspData: The response data\r\n* @return {function()} fetchData: The request function\r\n*/\r\n\r\nconst useAxiosHook = (resetInterval?: number) => {\r\n  const [isSuccess, setIsSuccess] = React.useState<boolean>(false)\r\n  const [hasError, setHasError] = React.useState<boolean>(false)\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\r\n  const [rspData, setRspData] = React.useState<object>({})\r\n\r\n  React.useEffect(() => {\r\n    let timeout: any\r\n\r\n    if (isSuccess && resetInterval) {\r\n      timeout = setTimeout(() => setIsSuccess(false), resetInterval)\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [isSuccess, resetInterval])\r\n\r\n  /**\r\n  * Setting isLoading to true / Resetting hasError and isSuccess to false\r\n  * @return {void} no return\r\n  */\r\n\r\n  const handleReset = (): void => {\r\n    setIsLoading(true)\r\n    setIsSuccess(false)\r\n    setHasError(false)\r\n  }\r\n\r\n  /**\r\n  * Setting isSuccess to true and store error in rspData state.\r\n  * @param {Any} e The request response\r\n  * @return {void} no return\r\n  */\r\n\r\n  const handleResponse = (e: any): void => {\r\n    setIsSuccess(true)\r\n    setRspData(e)\r\n  }\r\n\r\n  /**\r\n  * Setting hasError to true and store error in rspData state.\r\n  * @param {Any} e The request response\r\n  * @return {Void} no return\r\n  */\r\n\r\n  const handleError = (e: any): void => {\r\n    setHasError(true)\r\n    setRspData(e)\r\n  }\r\n\r\n  /**\r\n  * Setting isLoading to false\r\n  * @return {Void} no return\r\n  */\r\n\r\n  const handleLoad = () => setIsLoading(false)\r\n\r\n  /**\r\n  * Creating the union type Method Fetch to use on fetchData function as method Type\r\n  */\r\n  type MethodsFetch = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\"\r\n\r\n  /**\r\n  * Function to request or send data \r\n  * @param {String} baseURL The endpoint URL\r\n  * @param {MethodsFetch} method The request method\r\n  * @param {Object=} data The data to pass to request (optional)\r\n  * @param {Object=} headers The headers of request (optional)\r\n  * @return {Object} The result of the Axios Request\r\n  */\r\n\r\n  const fetchData = (\r\n    baseURL: string,\r\n    method: MethodsFetch,\r\n    data?: object,\r\n    headers?: object,\r\n  ) => {\r\n    handleReset()\r\n    return axios.request({\r\n      method,\r\n      baseURL,\r\n      data,\r\n      headers\r\n    })\r\n      .then((response: AxiosResponse): void => handleResponse(response))\r\n      .catch((error: AxiosError): void => handleError(error))\r\n      .finally((): void => handleLoad())\r\n  }\r\n\r\n  // Return HOOK data\r\n  return { isLoading, isSuccess, hasError, rspData, fetchData }\r\n}\r\n\r\nexport default useAxiosHook\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst InfoBar = ({ method, endpoint, reset, isLoading, isSuccess, hasError }: any) => {\r\n    return (\r\n        <>\r\n            <div className={styles.appInfos}>\r\n                Method: <b>{`${method}`}</b>\r\n            Sent:{' '}\r\n                <b\r\n                    style={{ color: isSuccess ? '#addb67' : '#ffa7c4' }}\r\n                >{`${isSuccess}`}\r\n                </b>\r\n            Reset:{' '}\r\n                <b\r\n                    style={{ color: reset ? '#addb67' : '#ffa7c4' }}\r\n                >{`${reset}`}\r\n                </b>\r\n            Loading:{' '}\r\n                <b\r\n                    style={{ color: isLoading ? '#addb67' : '#ffa7c4' }}\r\n                >{`${isLoading}`}</b>\r\n            Error:{' '}\r\n                <b\r\n                    style={{ color: hasError ? '#ffa7c4' : '#addb67' }}\r\n                >{`${hasError}`}</b>\r\n            </div>\r\n            <div className={styles.appEndpoint}><b>Endpoint:</b>{endpoint}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoBar","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst RadioInput = ({ setReset, changeMethod, changeEndpoint, data }: any) => {\r\n  const { endpoint, method, reset } = data\r\n  const methods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']\r\n  return (\r\n    <div>\r\n      <div className={[styles.inputMethods, styles['inputMethods--slider']].join(' ')}>\r\n        <label className={styles.inputSwitch}>\r\n          <input type=\"checkbox\" onChange={() => setReset(!reset)} />\r\n          <span className={styles.inputSlider}></span>\r\n        </label>\r\n        <span>Reset Sent State</span>\r\n      </div>\r\n      <input\r\n        className={styles.inputUrl}\r\n        type='url'\r\n        placeholder='Endpoint'\r\n        value={endpoint}\r\n        onChange={(e) => changeEndpoint(e.target.value)}\r\n      />\r\n      <div className={styles.inputMethods}>\r\n        {methods.map((item: string, idx: number) => {\r\n          return (\r\n            <label\r\n              key={`methods_${idx}`}\r\n              className={styles.inputCheckOptions}\r\n            >\r\n              <span>{item}</span>\r\n              <input type='checkbox' onChange={() => changeMethod(item)} checked={item === method && true} />\r\n              <span className={styles.inputCheckMark} />\r\n            </label>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioInput\r\n","import React, { useState } from 'react'\r\n\r\nimport styles from \"./index.module.css\"\r\nimport RadioInput from '../RadioInput'\r\n\r\nconst MenuSettings = ({ handleMethod, handleEndpoint, handleReset, data }: any) => {\r\n    const [settings, setSettings] = useState(false)\r\n    return (\r\n        <>\r\n            <button\r\n                aria-label='Abrir Menu Lateral'\r\n                className={styles.menuCog}\r\n                onClick={() => setSettings(!settings)}\r\n            >\r\n                <div className={`${styles.holder} ${settings ? styles['open'] : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </button>\r\n            <div\r\n                className={`${styles.menuSettings} ${settings && styles['menuSettings--on']\r\n                    }`}\r\n            >\r\n                <div className={styles.painel}>\r\n                    <div className='container'>\r\n                        <RadioInput\r\n                            setReset={handleReset}\r\n                            changeMethod={handleMethod}\r\n                            changeEndpoint={handleEndpoint}\r\n                            data={data}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div onClick={() => setSettings(false)} className={styles.bgSettings} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuSettings","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ResponseBoard = ({ data }: any) => {\r\n    return (\r\n        <pre className={styles.appResponse}>\r\n            <code>\r\n                {JSON.stringify(data, null, 2)}\r\n            </code>\r\n        </pre>\r\n    )\r\n}\r\n\r\nexport default ResponseBoard","import React, { useState } from 'react'\r\nimport useAxiosHook from 'axios-hook-library'\r\n\r\nimport logo from '../../logo.svg'\r\nimport styles from './index.module.css'\r\n\r\nimport InfoBar from '../../components/InfoBar'\r\nimport MenuSettings from '../../components/MenuSettings'\r\nimport ResponseBoard from '../../components/ResponseBoard'\r\n\r\nconst App = () => {\r\n\r\n  type Methods = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\"\r\n  const [reset, setReset] = useState(false)\r\n  const [method, setMethod] = useState<Methods>(\"GET\")\r\n  const [endpoint, setEndpoint] = useState(\r\n    'https://jsonplaceholder.typicode.com/posts/1'\r\n  )\r\n\r\n  const { isLoading, isSuccess, hasError, rspData, fetchData } = useAxiosHook(\r\n    reset ? 3000 : 0\r\n  )\r\n\r\n  const handleMethod = (e: Methods) => setMethod(e)\r\n  const handleEndpoint = (e: string) => setEndpoint(e)\r\n  const handleReset = (e: boolean) => setReset(e)\r\n\r\n  const formData = {\r\n    title: 'New Post',\r\n    userId: 1\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <MenuSettings handleMethod={handleMethod} handleEndpoint={handleEndpoint} handleReset={handleReset} data={{ reset, method, endpoint }} />\r\n      <div className={styles.app}>\r\n        <header className={styles.appHeader}>\r\n          <img src={logo} className={styles.appLogo} alt='logo' />\r\n        </header>\r\n        <div className={styles.appBody}>\r\n          <button\r\n            className={styles.appButton}\r\n            onClick={() => fetchData(endpoint, method, formData)}\r\n            type='button'\r\n          >\r\n            Fetch Data\r\n          </button>\r\n          <InfoBar method={method} endpoint={endpoint} reset={reset} isLoading={isLoading} isSuccess={isSuccess} hasError={hasError} />\r\n          <ResponseBoard data={rspData} />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './containers/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__5cPM_\",\"appLogo\":\"App_appLogo__3jScc\",\"app-logo-spin\":\"App_app-logo-spin__3hsj_\",\"appHeader\":\"App_appHeader__B6uro\",\"appBody\":\"App_appBody__H1mKi\",\"appButton\":\"App_appButton__2940N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appInfos\":\"InfoBar_appInfos__3rLdE\",\"appEndpoint\":\"InfoBar_appEndpoint__Dc8mE\"};"],"sourceRoot":""}