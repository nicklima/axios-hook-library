{"version":3,"sources":["logo.svg","components/ResponseBoard/index.module.css","components/RadioInput/index.module.css","components/MenuSettings/index.module.css","../../src/index.tsx","components/InfoBar/index.tsx","components/RadioInput/index.tsx","components/MenuSettings/index.tsx","components/ResponseBoard/index.tsx","containers/App/index.tsx","index.tsx","containers/App/index.module.css","components/InfoBar/index.module.css"],"names":["module","exports","resetInterval","React","isSuccess","setIsSuccess","hasError","setHasError","isLoading","setIsLoading","rspData","setRspData","timeout","setTimeout","clearTimeout","fetchData","a","method","baseURL","data","headers","e","InfoBar","endpoint","reset","className","styles","appInfos","style","color","appEndpoint","RadioInput","setReset","changeMethod","changeEndpoint","inputMethods","join","inputSwitch","type","onChange","inputSlider","inputUrl","placeholder","value","target","map","item","idx","key","inputCheckOptions","checked","inputCheckMark","MenuSettings","handleMethod","handleEndpoint","handleReset","useState","settings","setSettings","aria-label","menuCog","onClick","holder","menuSettings","painel","bgSettings","ResponseBoard","appResponse","JSON","stringify","App","setMethod","setEndpoint","useAxiosHook","formData","title","body","userId","app","appHeader","src","logo","appLogo","alt","appBody","appButton","ReactDOM","render","document","getElementById"],"mappings":"kIAAAA,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,YAAc,qC,kBCAhCD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,aAAe,iCAAiC,uBAAuB,yCAAyC,kBAAoB,sCAAsC,eAAiB,mCAAmC,YAAc,gCAAgC,YAAc,kC,2ECApVD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,KAAO,2BAA2B,aAAe,mCAAmC,WAAa,iCAAiC,OAAS,6BAA6B,mBAAmB,yC,8GCatQ,SAACC,G,MACcC,uBAA3BC,OAAWC,O,EACcF,uBAAzBG,OAAUC,O,EACiBJ,uBAA3BK,OAAWC,O,EACYN,uBAAvBO,OAASC,OAEhBR,qBAAgB,WACd,MAKA,OAHIC,GAAJ,IACEQ,EAAUC,YAAW,kBAAMR,GAAN,KAArBO,IAEK,WACLE,mBAED,CAACV,EATJD,IAqFA,MAAO,CAAEK,UAAF,EAAaJ,UAAb,EAAwBE,SAAxB,EAAkCI,QAAlC,EAA2CK,UApBhC,SAAC,EAAD,OAOhB,OAvDAN,MACAJ,MACAE,MAqDO,EAAAS,EAAA,QACI,CACPC,OADO,EAEPC,QAFO,EAGPC,KAHO,EAIPC,YALG,MAOC,mBAnDcC,EAmDd,EAlDRhB,WACAM,KAFqB,IAACU,KA4Cf,OAQE,mBAzCUA,EAyCV,EAxCTd,WACAI,KAFkB,IAACU,KAiCZ,SASI,kBAhCYZ,GAAN,S,iDC/BNa,EAnCC,SAAC,GAOL,IANVL,EAMS,EANTA,OACAM,EAKS,EALTA,SACAC,EAIS,EAJTA,MACAhB,EAGS,EAHTA,UACAJ,EAES,EAFTA,UACAE,EACS,EADTA,SAEA,OACE,oCACE,yBAAKmB,UAAWC,IAAOC,UAAvB,WACU,qCAAOV,IADjB,QAEQ,IACN,uBAAGW,MAAO,CAAEC,MAAOzB,EAAY,UAAY,YAA3C,UACMA,IAJR,SAMS,IACP,uBAAGwB,MAAO,CAAEC,MAAOL,EAAQ,UAAY,YAAvC,UAAwDA,IAP1D,WAQW,IACT,uBACEI,MAAO,CAAEC,MAAOrB,EAAY,UAAY,YAD1C,UAEKA,IAXP,SAYS,IACP,uBACEoB,MAAO,CAAEC,MAAOvB,EAAW,UAAY,YADzC,UAEKA,KAEP,yBAAKmB,UAAWC,IAAOI,aACrB,wCACCP,K,gCCaMQ,EA1CI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,eAAgBf,EAAgB,EAAhBA,KACpDI,EAA4BJ,EAA5BI,SAAUN,EAAkBE,EAAlBF,OAAQO,EAAUL,EAAVK,MAE1B,OACE,6BACE,yBACEC,UAAW,CAACC,IAAOS,aAAcT,IAAO,yBAAyBU,KAC/D,MAGF,2BAAOX,UAAWC,IAAOW,aACvB,2BAAOC,KAAK,WAAWC,SAAU,kBAAMP,GAAUR,MACjD,0BAAMC,UAAWC,IAAOc,eAE1B,mDAEF,2BACEf,UAAWC,IAAOe,SAClBH,KAAK,MACLI,YAAY,WACZC,MAAOpB,EACPgB,SAAU,SAAClB,GAAD,OAAOa,EAAeb,EAAEuB,OAAOD,UAE3C,yBAAKlB,UAAWC,IAAOS,cArBX,CAAC,MAAO,OAAQ,MAAO,QAAS,UAsBjCU,KAAI,SAACC,EAAcC,GAC1B,OACE,2BAAOC,IAAG,kBAAaD,GAAOtB,UAAWC,IAAOuB,mBAC9C,8BAAOH,GACP,2BACER,KAAK,WACLC,SAAU,kBAAMN,EAAaa,IAC7BI,QAASJ,IAAS7B,IAAU,IAE9B,0BAAMQ,UAAWC,IAAOyB,wBCUvBC,EAzCM,SAAC,GAKV,IAJVC,EAIS,EAJTA,aACAC,EAGS,EAHTA,eACAC,EAES,EAFTA,YACApC,EACS,EADTA,KACS,EACuBqC,oBAAS,GADhC,mBACFC,EADE,KACQC,EADR,KAET,OACE,oCACE,4BACEC,aAAW,qBACXlC,UAAWC,IAAOkC,QAClBC,QAAS,kBAAMH,GAAaD,KAE5B,yBAAKhC,UAAS,UAAKC,IAAOoC,OAAZ,YAAsBL,EAAW/B,IAAM,KAAW,KAC9D,+BACA,+BACA,iCAGJ,yBACED,UAAS,UAAKC,IAAOqC,aAAZ,YACPN,GAAY/B,IAAO,sBAGrB,yBAAKD,UAAWC,IAAOsC,QACrB,yBAAKvC,UAAU,aACb,kBAAC,EAAD,CACEO,SAAUuB,EACVtB,aAAcoB,EACdnB,eAAgBoB,EAChBnC,KAAMA,MAIZ,yBAAK0C,QAAS,kBAAMH,GAAY,IAAQjC,UAAWC,IAAOuC,gB,iBC7BnDC,EARO,SAAC,GAAmB,IAAjB/C,EAAgB,EAAhBA,KACvB,OACE,yBAAKM,UAAWC,IAAOyC,aACrB,8BAAOC,KAAKC,UAAUlD,EAAM,KAAM,MCiEzBmD,EA7DH,WAAO,IAAD,EAEUd,oBAAS,GAFnB,mBAEThC,EAFS,KAEFQ,EAFE,OAGYwB,mBAAkB,OAH9B,mBAGTvC,EAHS,KAGDsD,EAHC,OAIgBf,mBAC9B,gDALc,mBAITjC,EAJS,KAICiD,EAJD,OAQ+CC,EAC7DjD,EAAQ,IAAO,GADThB,EARQ,EAQRA,UAAWJ,EARH,EAQGA,UAAWE,EARd,EAQcA,SAAUI,EARxB,EAQwBA,QAASK,EARjC,EAQiCA,UAQ3C2D,EAAW,CACfC,MAAO,qBACPC,KAAM,2DACNC,OAAQ,GAGV,OACE,8BACE,kBAAC,EAAD,CACExB,aAbe,SAAChC,GAAD,OAAgBkD,EAAUlD,IAczCiC,eAbiB,SAACjC,GAAD,OAAemD,EAAYnD,IAc5CkC,YAbc,SAAClC,GAAD,OAAgBW,EAASX,IAcvCF,KAAM,CAAEK,QAAOP,SAAQM,cAEzB,yBAAKE,UAAWC,IAAOoD,KACrB,4BAAQrD,UAAWC,IAAOqD,WACxB,yBAAKC,IAAKC,IAAMxD,UAAWC,IAAOwD,QAASC,IAAI,UAEjD,yBAAK1D,UAAWC,IAAO0D,SACrB,4BACE3D,UAAWC,IAAO2D,UAClBxB,QAAS,WACI,QAAX5C,GAA+B,WAAXA,EAChBF,EAAUQ,EAAUN,GACpBF,EAAUQ,EAAUN,EAAQyD,IAElCpC,KAAK,UAPP,cAWA,kBAAC,EAAD,CACErB,OAAQA,EACRM,SAAUA,EACVC,MAAOA,EACPhB,UAAWA,EACXJ,UAAWA,EACXE,SAAUA,IAEZ,kBAAC,EAAD,CAAea,KAAMT,QC1D/B4E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjDzF,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,gBAAgB,2BAA2B,UAAY,uBAAuB,QAAU,qBAAqB,UAAY,yB,kBCAjMD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,YAAc,gC","file":"static/js/main.c185c8d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appResponse\":\"ResponseBoard_appResponse__2f_9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputUrl\":\"RadioInput_inputUrl__yapD6\",\"inputMethods\":\"RadioInput_inputMethods__3k3Xu\",\"inputMethods--slider\":\"RadioInput_inputMethods--slider__3Rt4J\",\"inputCheckOptions\":\"RadioInput_inputCheckOptions__3rUhe\",\"inputCheckMark\":\"RadioInput_inputCheckMark__3C83l\",\"inputSwitch\":\"RadioInput_inputSwitch__hJwSI\",\"inputSlider\":\"RadioInput_inputSlider__3bONM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuCog\":\"MenuSettings_menuCog__2RApP\",\"holder\":\"MenuSettings_holder__2dz8p\",\"open\":\"MenuSettings_open__2KAY8\",\"menuSettings\":\"MenuSettings_menuSettings__17esP\",\"bgSettings\":\"MenuSettings_bgSettings__3e_PV\",\"painel\":\"MenuSettings_painel__7dRD4\",\"menuSettings--on\":\"MenuSettings_menuSettings--on__2gkjz\"};","import * as React from 'react'\r\nimport axios from 'axios'\r\n\r\n/**\r\n * Creation of react states to identify errors, success and loading.\r\n * Creation of the function that sends/get requests to endpoint.\r\n * @param {Number=} resetInterval Time in milliseconds to reset \"isSuccess\" state (optional)\r\n * @return {boolean} isLoading: The load state\r\n * @return {boolean} isSuccess: The success state\r\n * @return {boolean} hasError: The error state\r\n * @return {object} rspData: The response data\r\n * @return {function()} fetchData: The request function\r\n */\r\n\r\nconst useAxiosHook = (resetInterval?: number) => {\r\n  const [isSuccess, setIsSuccess] = React.useState<boolean>(false)\r\n  const [hasError, setHasError] = React.useState<boolean>(false)\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\r\n  const [rspData, setRspData] = React.useState<object>({})\r\n\r\n  React.useEffect(() => {\r\n    let timeout: any\r\n\r\n    if (isSuccess && resetInterval) {\r\n      timeout = setTimeout(() => setIsSuccess(false), resetInterval)\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [isSuccess, resetInterval])\r\n\r\n  /**\r\n   * Setting isLoading to true / Resetting hasError and isSuccess to false\r\n   * @return {void} no return\r\n   */\r\n\r\n  const handleReset = (): void => {\r\n    setIsLoading(true)\r\n    setIsSuccess(false)\r\n    setHasError(false)\r\n  }\r\n\r\n  /**\r\n   * Setting isSuccess to true and store error in rspData state.\r\n   * @param {Any} e The request response\r\n   * @return {void} no return\r\n   */\r\n\r\n  const handleResponse = (e: any): void => {\r\n    setIsSuccess(true)\r\n    setRspData(e)\r\n  }\r\n\r\n  /**\r\n   * Setting hasError to true and store error in rspData state.\r\n   * @param {Any} e The request response\r\n   * @return {Void} no return\r\n   */\r\n\r\n  const handleError = (e: any): void => {\r\n    setHasError(true)\r\n    setRspData(e)\r\n  }\r\n\r\n  /**\r\n   * Setting isLoading to false\r\n   * @return {Void} no return\r\n   */\r\n\r\n  const handleLoad = () => setIsLoading(false)\r\n\r\n  /**\r\n   * Creating the union type Method Fetch to use on fetchData function as method Type\r\n   */\r\n  type MethodsFetch = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\r\n\r\n  /**\r\n   * Function to request or send data\r\n   * @param {String} baseURL The endpoint URL\r\n   * @param {MethodsFetch} method The request method\r\n   * @param {Object=} data The data to pass to request (optional)\r\n   * @param {Object=} headers The headers of request (optional)\r\n   * @return {Object} The result of the Axios Request\r\n   */\r\n\r\n  const fetchData = (\r\n    baseURL: string,\r\n    method: MethodsFetch,\r\n    data?: object,\r\n    headers?: object\r\n  ) => {\r\n    handleReset()\r\n    return axios\r\n      .request({\r\n        method,\r\n        baseURL,\r\n        data,\r\n        headers,\r\n      })\r\n      .then((response: any): void => handleResponse(response))\r\n      .catch((error: any): void => handleError(error))\r\n      .finally((): void => handleLoad())\r\n  }\r\n\r\n  // Return HOOK data\r\n  return { isLoading, isSuccess, hasError, rspData, fetchData }\r\n}\r\n\r\nexport default useAxiosHook\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst InfoBar = ({\r\n  method,\r\n  endpoint,\r\n  reset,\r\n  isLoading,\r\n  isSuccess,\r\n  hasError,\r\n}: any) => {\r\n  return (\r\n    <>\r\n      <div className={styles.appInfos}>\r\n        Method: <b>{`${method}`}</b>\r\n        Sent:{' '}\r\n        <b style={{ color: isSuccess ? '#addb67' : '#ffa7c4' }}>\r\n          {`${isSuccess}`}\r\n        </b>\r\n        Reset:{' '}\r\n        <b style={{ color: reset ? '#addb67' : '#ffa7c4' }}>{`${reset}`}</b>\r\n        Loading:{' '}\r\n        <b\r\n          style={{ color: isLoading ? '#addb67' : '#ffa7c4' }}\r\n        >{`${isLoading}`}</b>\r\n        Error:{' '}\r\n        <b\r\n          style={{ color: hasError ? '#ffa7c4' : '#addb67' }}\r\n        >{`${hasError}`}</b>\r\n      </div>\r\n      <div className={styles.appEndpoint}>\r\n        <b>Endpoint:</b>\r\n        {endpoint}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InfoBar\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst RadioInput = ({ setReset, changeMethod, changeEndpoint, data }: any) => {\r\n  const { endpoint, method, reset } = data\r\n  const methods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']\r\n  return (\r\n    <div>\r\n      <div\r\n        className={[styles.inputMethods, styles['inputMethods--slider']].join(\r\n          ' '\r\n        )}\r\n      >\r\n        <label className={styles.inputSwitch}>\r\n          <input type='checkbox' onChange={() => setReset(!reset)} />\r\n          <span className={styles.inputSlider}></span>\r\n        </label>\r\n        <span>Reset Sent State</span>\r\n      </div>\r\n      <input\r\n        className={styles.inputUrl}\r\n        type='url'\r\n        placeholder='Endpoint'\r\n        value={endpoint}\r\n        onChange={(e) => changeEndpoint(e.target.value)}\r\n      />\r\n      <div className={styles.inputMethods}>\r\n        {methods.map((item: string, idx: number) => {\r\n          return (\r\n            <label key={`methods_${idx}`} className={styles.inputCheckOptions}>\r\n              <span>{item}</span>\r\n              <input\r\n                type='checkbox'\r\n                onChange={() => changeMethod(item)}\r\n                checked={item === method && true}\r\n              />\r\n              <span className={styles.inputCheckMark} />\r\n            </label>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioInput\r\n","import React, { useState } from 'react'\r\n\r\nimport styles from './index.module.css'\r\nimport RadioInput from '../RadioInput'\r\n\r\nconst MenuSettings = ({\r\n  handleMethod,\r\n  handleEndpoint,\r\n  handleReset,\r\n  data,\r\n}: any) => {\r\n  const [settings, setSettings] = useState(false)\r\n  return (\r\n    <>\r\n      <button\r\n        aria-label='Abrir Menu Lateral'\r\n        className={styles.menuCog}\r\n        onClick={() => setSettings(!settings)}\r\n      >\r\n        <div className={`${styles.holder} ${settings ? styles['open'] : ''}`}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </button>\r\n      <div\r\n        className={`${styles.menuSettings} ${\r\n          settings && styles['menuSettings--on']\r\n        }`}\r\n      >\r\n        <div className={styles.painel}>\r\n          <div className='container'>\r\n            <RadioInput\r\n              setReset={handleReset}\r\n              changeMethod={handleMethod}\r\n              changeEndpoint={handleEndpoint}\r\n              data={data}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div onClick={() => setSettings(false)} className={styles.bgSettings} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuSettings\r\n","import React from 'react'\r\nimport styles from './index.module.css'\r\n\r\nconst ResponseBoard = ({ data }: any) => {\r\n  return (\r\n    <pre className={styles.appResponse}>\r\n      <code>{JSON.stringify(data, null, 2)}</code>\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default ResponseBoard\r\n","import React, { useState } from 'react'\r\nimport useAxiosHook from 'axios-hook-library'\r\n\r\nimport logo from '../../logo.svg'\r\nimport styles from './index.module.css'\r\n\r\nimport InfoBar from '../../components/InfoBar'\r\nimport MenuSettings from '../../components/MenuSettings'\r\nimport ResponseBoard from '../../components/ResponseBoard'\r\n\r\nconst App = () => {\r\n  type Methods = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\r\n  const [reset, setReset] = useState(false)\r\n  const [method, setMethod] = useState<Methods>('GET')\r\n  const [endpoint, setEndpoint] = useState(\r\n    'https://jsonplaceholder.typicode.com/posts/1'\r\n  )\r\n\r\n  const { isLoading, isSuccess, hasError, rspData, fetchData } = useAxiosHook(\r\n    reset ? 3000 : 0\r\n  )\r\n\r\n  const handleMethod = (e: Methods) => setMethod(e)\r\n  const handleEndpoint = (e: string) => setEndpoint(e)\r\n  const handleReset = (e: boolean) => setReset(e)\r\n\r\n  const formData = {\r\n    title: 'Axios Hook Library',\r\n    body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\r\n    userId: 1,\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <MenuSettings\r\n        handleMethod={handleMethod}\r\n        handleEndpoint={handleEndpoint}\r\n        handleReset={handleReset}\r\n        data={{ reset, method, endpoint }}\r\n      />\r\n      <div className={styles.app}>\r\n        <header className={styles.appHeader}>\r\n          <img src={logo} className={styles.appLogo} alt='logo' />\r\n        </header>\r\n        <div className={styles.appBody}>\r\n          <button\r\n            className={styles.appButton}\r\n            onClick={() => {\r\n              method === 'GET' || method === 'DELETE'\r\n                ? fetchData(endpoint, method)\r\n                : fetchData(endpoint, method, formData)\r\n            }}\r\n            type='button'\r\n          >\r\n            Fetch Data\r\n          </button>\r\n          <InfoBar\r\n            method={method}\r\n            endpoint={endpoint}\r\n            reset={reset}\r\n            isLoading={isLoading}\r\n            isSuccess={isSuccess}\r\n            hasError={hasError}\r\n          />\r\n          <ResponseBoard data={rspData} />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './containers/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__tgNq_\",\"appLogo\":\"App_appLogo__3QMgJ\",\"app-logo-spin\":\"App_app-logo-spin__3Xmyt\",\"appHeader\":\"App_appHeader__2mGaY\",\"appBody\":\"App_appBody___r9KM\",\"appButton\":\"App_appButton__3phuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appInfos\":\"InfoBar_appInfos__1WLdp\",\"appEndpoint\":\"InfoBar_appEndpoint__2D2S-\"};"],"sourceRoot":""}